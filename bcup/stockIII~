class Solution {
public:
    int maxProfit(vector<int> &prices) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int i, profit, max ;
	int len = prices.size();
	vector<int> min(len, prices[0]);
	vector<int> max(len, prices[ len -1 ] );
        vector<int> first(len,0);	
        vector<int> second(len,0);	
	best_profit = 0;
	 
        first[0]  = 0;
	
	for ( i=1; i< len ; i ++ ){
		// update the best profit of first part
		first[i] = first[i-1];
		if (prices[i] - min[i-1] > first[i] ) first[i] = prices[i] - min[i-1];
		// update the min value of the first part
		min[i] = min[i-1];
		if (prices[i] < min[i]) min[i] = prices[i];
	}

	second[len-1] = 0 ; 
        max[len-1] = prices[len-1];
	for ( i= len-2; i>=0; i-- ){
		//update the best profit of the second part
		second[i] = second [i+1];
		if (max[i+1]-prices[i] > second[i] ) second[i] = max[i+1]-prices[i];
		// update max value
		max[i] = max[i+1];
		if (prices[i] > max[i] ) max[i] = prices[i];

	}
  
        for (i=0; i< len ; i ++)
		if (first[i]+second[i] > best_profit)
			best_profit = first[i] + second[i];

	return best_profit;

    }
};

